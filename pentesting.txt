4 steps of a pentest:
---------------------
• Reconnaissance
• Scanning
    Port scanning
    Vulnerability scanning
• Exploitation
• Post exploitation and maintaining access

==============
Reconnaissance
==============
Also known as Open-Source Intelligence, OSINT.

HTTrack: Website Copier
-----------------------
HTTrack creates an identical, offline copy of the target website. The copied website will include all the pages, links, pictures and code from the original website, allowing you to thoroughly probe the website offline without sending requests to the actual website. Be warned that cloning a website is easy to trace and is considered highly offensive, never run this tool without prior authorization.
After running httrack, you need to answer a series of basic questions. In most cases the default answer is good enough, at minimum you will need to enter a project name and the URL to copy. Do take the time to read each question before accepting. When it's done, the cloned site is placed in the directory /root/websites/<project_name>

Pay special attention to 'News' or 'Announcements'. Companies are often proud of their achievements and may unintentionally leak useful information through these stories. Company mergers and acquisitions can also yield valuable data. The transition period during merging provides unique opportunities to take advantage of change and confusion. Even if the merger is already over, the information provides additional targets to be added to the list. Finally, open job postings (especially technical ones) often reveal detailed information about the technology being used by an organization. Many times you will find specific hardware and software listed on the job opening.

- Passive Recon -
Once the target website has been thoroughly examined, we can conduct some passive reconnaissance (is scraping the company website not already passive reconnaissance?). Passive reconnaissance is very hard to track, and tends to be a low-risk, high-reward situation.

- Google-Fu -
The key thing to note is that Google has already very aggressively scraped the internet for you. Often the sensitive data you need might already be sitting in Google's servers, just that you need to craft the right Google search query to make it turn up. This is what google-fu is all about.
Google provides 'directives' which allow you to further narrow down your search in accordance with the directive. The site: directive makes google only return hits that come from the specified website. The intitle: and allintitle: directives will return sites where the specified keywords are present in the title. The inurl: directive searches for URLs with the specified keywords in the url, for example inurl:admin can help reveal admin or config pages of a website.
Also consider searching the google cache rather than the target's website, further reducing your digital footprints on the target website's server. You can specify which site you wish to search in Google's cache with the cache: directive. It is helpful to note that the cache contains both the code used to build the site as well as many of the files discovered by the Google bots in the process, such as PDFs, Word, Excel, text files and more. To explicitly search for file of a certain filetype, use the filetype: directive.
'Google Hacking' is also referred to as 'Google Dorks'. When an application has a specific vulnerability, hackers and security researchers will typically place a google dork in the exploit, allowing you to access these vulnerabilities via google search. You can find a maintained list of google dorks on exploit-db.com in the GHDB (Google Hacking Database) section.
Don't constrain yourself to google, as Yahoo, Bing, Ask, Dogpile and many more search engines will give you different results even when you search for the same keywords. It helps to be familiar with the capabilities of the other search engines.

The Harvester: Discovering and Leveraging Email Addresses
---------------------------------------------------------
A simple but effective python script written by Christian Martorella at Edge Security. Uses search engines to locate emails and subdomains related to the target.
It is important to always use the latest version of the Harvester as many search engines regularly update and change their systems.
./theharvester.py -d syngress.com -b google
returns a bunch of emails xxxx@syngress.com,
69.163.177.2:www.syngress.com
145.36.40.35:booksite.syngress.com

Whois
-----
Whois is built into linux. Search whois <domain name> to get a bunch of information. There is also the web-based tool whois.net.

Netcraft
--------
https://netcraft.com
There's a "what's that site running?" function that divulges a website's tech info to you. Doesn't have any results for admaterials.com.sg or teckwah.com.sg so I'm not going to place too much emphasis on this tool.

Host
----
Often our recon efforts will result in host names instead of IP addresses. We can use the 'host' tool to perform the translation for us. Call host <domain name> to obtain the IP address

Extracting Information from DNS
-------------------------------
DNS servers handle the translation of machine-preferred IP addresses and human-preferred domain names. As such, gaining access to a company's DNS servers is like finding the blueprint to an organization's network. Oftentimes DNS servers tend to operate on a If It Ain't Broke, Don't Touch It principle since inexperienced network administrators usually regard their DNS servers with suspicion and mistrust because they do not fully understand it. Thus patching, updating or changing configurations on the DNS server is often a low priority. Add on the fact that most DNS servers appear stable as long as nobody fucks around with it means that many DNS servers out there are misconfigured or unpatched.

Companies usually use multiple DNS servers for redundancy or load balancing purposes. As a result, the information in these DNS servers have to be kept in sync, and they synchronise this data through what is called a zone transfer (also known as AXFR). During a zone transfer one DNS servers will send all its host-to-IP mappings to another DNS server. One thing you can try at the beginning is to attempt a zone transfer with a DNS server in order to extract its information.

nslookup
--------
nslookup is used to query DNS servers and potentially obtain records about the various hosts of which it is aware. nslookup is used interactively, i.e. you run 'nslookup' first then specify your details.
$ nslookup
> server 8.8.8.8
Default server: 8.8.8.8
Address: 8.8.8.8#53
> set type = any
*** Invalid option: type
> set type=any
> syngress.com
Server:         8.8.8.8
Address:        8.8.8.8#53

Non-authoritative answer:
syngress.com
origin = ns1.reedelsevier.com
mail addr = hostmaster.elsvier.co.uk
serial = 2014031121
refresh = 3600
retry = 900
expire = 2419200
minimum = 900
Name:   syngress.com
Address: 207.24.42.235
syngress.com    mail exchanger = 10 syngress.com.inbound10.mxlogicmx.net.
syngress.com    mail exchanger = 10 syngress.com.inbound10.mxlogic.net.
syngress.com    nameserver = ns2.reedelsevier.com.
syngress.com    nameserver = ns1.reedelsevier.com.
syngress.com    nameserver = ns3.reedelsevier.com.

Authoritative answers can be found from:

Dig
---
Another great tool for extracting information from DNS is 'dig'. Simple run `dig @target_ip`.
You can use the -t AXFR flag to attempt a zone transfer if the target does not distinguish between internal and external IPs when conducting a zone transfer.
dig @192.168.1.23example.com -t AXFR

Fierce: What to Do When Zone Transfers Fail
-------------------------------------------
A powerful perl script that provides additional targets.
./fierce.pl -dns trustedsec.com
If a zone transfer fails, fierce will attempt to brute-force host names by sending a series of queries to the DNS server. The idea is that is Dave owns 'trustedsec.com', he may also own support.trustedsec.com, citrix.trustedsec.com, print.trustedsec.com, etc.

Extracting Information from Email Servers
-----------------------------------------
"You can't block what you must let in". Email is a vulnerability because of this.
One of the first things to do when attempting to recon an email server is to send an email with a nonmalicious .bat/.exe file and hope the email server will inspect and reject the message. Information can then be extracted from the rejection message about the target email server, such as the specific vendor and version of antivirus that was used to scan the email. The headers of the return email can also be inspected for basic information like the IP address, specific software versions or brand of email server running.

MetaGooFil
----------
Written by the same people who wrote The Harvester, MetaGooFil is a metadata extraction tool that will scour the internet for documents related to your target, download them and attempt to extract useful metadata.
./metagoofil.py -d syngress.com -t pdf,doc,xls,pptx -n 20 -o files -f results.html

ThreatAgent
-----------
Sign up for an account at https://www.threatagent.com. Provide an organization name (e.g. Syngress) and a domain name (e.g. syngress.com) and ThreatAgent will present a report to you including IP address ranges, email addresses, points of contact within the organization, ports that are open (through Shodan), and much more. Feels very script-kiddie to me, but hey if it works it works.

Social Engineering
------------------
In order to be a good social engineer, one must be supremely confident, knowledgeable of the situation, and flexible enough to go "off script".
Another example of social engineering could be leaving malicious USB sticks lying around with intriguing labels like 'annual salary statistics'

How Do I Practice This Step?
----------------------------
Make a list of companies by reading the newspaper, then do PASSIVE recon on those companies. While Reconnaissance is the least technical phase, it has the potential for the best returns.

========
Scanning
========
Once reconnaissance has been completed, you should have a solid understanding of the target and a detailed collection of gathered information. These data mainly include our collection of IP addresses. Recall that one of the final steps in reconnaissance.

2.1 Determining if a system is alive with ping packets
2.2 Port scanning the system with Nmap
2.3 Leveraging the Nmap Scripting Engineer (NSE) to further interrogate the target
2.4 Scanning the system for vulnerabilities with Nessus

Later in the chapter we will discuss tools that combine these phases into a single process; however for learning purposes we will be covering these phases separately.

Imagine a house with unique numbers over each of the potential entry points. Most people will use the front door. Sometimes, people enter the house from a backdoor or sliding glass door off the deck. An unconventional person may climb through a window or attempt to squeeze through the doggie door! Ports correspond nicely to these different entrances to your house (IP address). Some ports are more common and receive lots of traffic (just like your front door); others are more obscure and rarely used (by humans) like the doggie door.
Many common network services run on standard port numbers and can give attackers an indication to the function of the target system.

|-------------+-------------------|
| Port Number | Service           |
|-------------+-------------------|
| 20          | FTP data transfer |
| 21          | FTP control       |
| 22          | SSH               |
| 23          | Telnet            |
| 25          | SMTP (email)      |
| 53          | DNS               |
| 80          | HTTP              |
| 137 - 139   | NetBIOS           |
| 443         | HTTPS             |
| 445         | SMB               |
| 1433        | MSSQL             |
| 3306        | MySQL             |
| 3389        | RDP               |
| 5800        | VNC over HTTP     |
| 5900        | VNC               |
|-------------+-------------------|

The discovery of known vulnerabilities on a target system is a bit like winning the lottery or hitting a blackjack in Vegas. Many systems can be exploited with little to no skill once a machine is discovered to have a vulnerability. There are also various levels of severity for vulnerabilities, some give limited access to the attacker while others grant all access. Sometimes the target machine is not directly reachable via the internet, e.g. inside an internal network. In this case we aim to compromise a perimeter machine as a stepping stone to attack another machine, something known as 'pivoting'. Hackers may have to pivot several times before gaining access to the target computer.

By scanning perimeter devices, we can gain access to a perimeter machine and repeat scans from the new machine and so on and so forth. This cyclical process allows us to create a very detailed internal network map and discover critical infrastructure hiding behind the corporate firewall.

Ping and Ping Sweeps
--------------------
A ping is a special type of network packet called an Internet Control Message Protocol (ICMP) packet. Pings work by sending a particular type of network traffic, called an ICMP echo request packet, to a specific interface on a computer or network device. If the device (and attached network card) that received the ping packet is turned on and not restricted from responding, the receiving machine will respond back to the originating machine with an echo reply packet.

$ ping google.com
PING google.com (172.217.194.101): 56 data bytes
64 bytes from 172.217.194.101: icmp_seq=0 ttl=44 time=18.698 ms
64 bytes from 172.217.194.101: icmp_seq=1 ttl=44 time=14.096 ms
64 bytes from 172.217.194.101: icmp_seq=2 ttl=44 time=9.247 ms
64 bytes from 172.217.194.101: icmp_seq=3 ttl=44 time=9.191 ms
^C
--- google.com ping statistics ---
4 packets transmitted, 4 packets received, 0.0% packet loss
round-trip min/avg/max/stddev = 9.191/12.808/18.698/3.941 ms

"64 bytes from" means our ICMP packet successfully reached google.com and that their response packet of 64 bytes successfully reached our machine
"172.217.194.101" is the IP address which responded to our google.com ping
"icmp_seq=" designates packet order
"ttl=" is the time to live value. This is used to determine the maximum number of hops the packet will take before automatically expiring.
"time=" tells you how long the entire trip took for the packets to travel to and from the target
After terminating the ping request you will be presented with a bunch of self-explanatory stats.

We can use ping to check if a host is alive, but it would be troublesome to manually ping a range of hosts. Hence we can conduct a ping sweep instead which will ping a range of IP addresses for us. The simplest way to conduct a ping sweep is with a tool called FPing. FPing is built into Kali and can be downloaded for Windows.
fping -a -g 172.16.45.1 172.16.45.254 > hosts.txt
-a will only show alive hosts
-g specifies the range

Port Scanning
-------------
Port scanning is like knocking on various doors and windows of a house and seeing who answers. For example if we find that port 80 is open we can attempt a connection to the port and oftentimes get specific information about the webserver that is listening on that port.

There are a total of 65,536 (0-65,535) ports on every computer. Ports can either be transmission control protocol (TCP) or user datagram protocol (UDP) depending on the service utilizing the port or nature of the communication occurring on the port.

    The Three-Way Handshake
    -----------------------
    When two machines want to communicate using TCP, they do a three-way handshake. The first computer connects to the second computer by sending a SYN packet to a specified port number. The second computer responds with a SYN/ACK packet. Once the first computer receives this SYN/ACK packet, it replies with its own ACK packet. At this point, both computers know the other is online and ready for transmission.

Using Nmap to perform a TCP Connect Scan
----------------------------------------
The TCP connect scan is often considered the most basic and stable of all the port scans because nmap attempts to complete the 3 way handshake on each specific port and tears down the connection gracefully, so there is little chance of flooding the target system and causing it to crash. Use the '-sT' flag to specify a TCP scan (-sU for UDP scan).
If you do not specify a target range, Nmap will scan the 1000 most common ports. It is recommended to scan all ports because sometimes admins may obscure a service by running it on a nonstandard port. Use the '-p-' flag to specify scanning all ports. It is also recommended to use the '-Pn' flag to skip host discovery, meaning Nmap will scan every host as if it were alive. This is useful for discovering additional systems and ports that otherwise may have been missed.
nmap -sT -p- -Pn 192.168.18.132
You can also run nmap against an entire subnet or range of IP addresses
nmap -sT -p- -Pn 192.168.18.1-254
You can pass in a text file with an IP address to be scanned on each line
nmap -sT -p- -Pn -iL path/to/textfile

Using Nmap to perform a SYN Scan
--------------------------------
The SYN scan is arguably the most popular Nmap port scan, as well as the default. It is quite safe with little chance of DoS'ing or crashing the target system, and also faster than TCP scans because rather than completing the entire three-way handshake, it completes only the first two. It sends a SYN packet and waits for a SYN/ACK, then immediately sends an RST (reset) packet telling the host to disregard any previous packets and close the connection. It should be clear that the speed advantage of the SYN scan over the TCP connect scan comes from the fact that there are fewer packets being sent. One packet less per port may not sound like much, but it quickly adds up when scanning multiple hosts.

A SYN scan is often referred to as the "Stealth Scan" because the three-way handshake is never fully completed, so an official connection was never established. There are applications and loggers that require the completion of a three-way handshake in order to record something, as a result a SYN scan will fly under their radar. BUT this is an exception and not the rule. All modern firewalls and intrusion detection systems in use today will detect and report SYN scans!

Using Nmap to perform UDP Scans
-------------------------------
A common mistake of new pentesters is to overlook UDP. These aspiring hackers oftentimes fire up Nmap, run a single scan (typically a SYN scan), and move onto vulnerability scanning. Do not neglect to scan UDP ports!

TCP is considered a "connection-oriented protocol" because it requires that the communication between both the sender and the receiver stays in sync. TCP ensures that the packets sent from one computer to another arrive at the receiver intact and in the same order they were sent. 

OTOH, UDP is said to be "connectionless" because the sender simply sends packets to the receiver without regard for whether the packets arrive at their destination. Because UDP is connectionless, it is comparable to dropping a letter in a mailbox.
nmap -sU 192.168.18.1-254
Because UDP scans are already very slow, even with the default 1000 ports, it is advisable to omit the -p- and -Pn flags from the search.
But how do UDP scans even work? UDP by definition does not send back any ACK packets. When you send a SYN packet by UDP, it is normal to not receive any response. So how can you tell if a port is open to UDP? Hence most of the time Nmap will simply mark it as 'open | filtered'. Hence most people think UDP scans are a waste of time because most of the results are simply show 'open | filtered'. Sometimes, rarely, UDP ports will send back a response. Nmap will hence mark those ports as 'open'.
When dealing with UDP scans, you can add the -sV flag for a better chance of provoking a response from the port.
nmap -sUV 192.168.18.1-254

Using Nmap to perform an Xmas Scan
----------------------------------
